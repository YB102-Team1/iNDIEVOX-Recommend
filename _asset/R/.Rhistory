mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
colnames(mat) = c('first', 'second')
rownames(mat) = c('kevin', 'marry', 'jerry')
total = matrix(mat[, 'first'] * 0.4 + mat[, 'second'] * 0.6, nrow=3)
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
colnames(mat) = c('first', 'second')
rownames(mat) = c('kevin', 'marry', 'jerry')
total = matrix(mat[, 'first'] * 0.4 + mat[, 'second'] * 0.6, nrow=3)
total
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
total = matrix(mat[, 1] * 0.4 + mat[, 2] * 0.6, nrow=3)
total
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
total = matrix(mat[, 1] * 0.4 + mat[, 2] * 0.6, nrow=3)
total
cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6, nrow=3)
height_vec = c(180, 169, 173);
colnames(mat)[ncol] = 'total'
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
rbind(bmi_vec < 18.5 | bmi_vec >= 24], height_vec, weight_vec)
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
rbind(bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24], height_vec, weight_vec)
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
names(height_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c("Brian", "Toby", "Sherry")
names(weight_vec) = names_vec
names(height_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c('Brian', 'Toby', 'Sherry')
names(weight_vec) = names_vec
names(height_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
air_class = c('business', 'economy', 'first', 'economy', 'first')
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c('Brian', 'Toby', 'Sherry')
names(weight_vec) = names_vec
names(height_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
air_class = c('business', 'economy', 'first', 'economy', 'first')
factor(air_class)
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c('Brian', 'Toby', 'Sherry')
names(weight_vec) = names_vec
names(height_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
air_class = c('business', 'economy', 'first', 'economy', 'first')
levels(air_class)
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c('Brian', 'Toby', 'Sherry')
names(weight_vec) = names_vec
names(height_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
air_class = c('business', 'economy', 'first', 'economy', 'first')
levels(factor(air_class))
weather = c('sunny', 'rainy', 'cloudy', 'rainy', 'cloudy')
whether_category = factor(wether)
weather_category = factor(weather)
weather_category
temperature = c('Low', 'High', 'Medium', 'Low', 'Medium')
temperature_category = factor(temperature, order=TRUE, levels = c('Low', 'Medium', 'High'))
temperature_category
temperature_category[3] > temperature_category[1]
temperature_category[4] > temperature_category[3]
levels(weather_category)
levels(temperature_category)
weather = c('s', 'r', 'c', 'r', 'c')
weather_factor = factor(weather)
levels(weather_factor) = c('cloudy', 'rainy', 'sunny')
weather_factor
df = data.frame(a=c(1:5),b=c(2:6))
df
height_vec = c(180, 169, 173);
weight_vec = c(73, 87, 43)
names_vec = c('Brian', 'Toby', 'Sherry')
names(weight_vec) = names_vec
names(height_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat,mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
air_class = c('business', 'economy', 'first', 'economy', 'first')
levels(factor(air_class))
data()
data(iris)
class(iris)
head(iris)
head(iris, 10)
tail(iris)
tail(iris, 10)
str(iris)
height_vec = c(180, 169, 173)
weight_vec = c(73, 87, 43)
names_vec = c('Brian', 'Toby', 'Sherry')
names(height_vec) = names_vec
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat, mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
air_class = c('business', 'economy', 'first', 'economy', 'first')
levels(factor(air_class))
data(mtcars)
head(subset(mtcars, am == 1)[order(subset(mtcars, am == 1)$hp, decreasing=TRUE), ], 3)
list(list(name = 'Bobby', age = 31, tel_length = c(10, 2, 5)), list(name = 'Marry', age = 27, tel_length = c(31, 29)))
height_vec = c(180, 169, 173)
weight_vec = c(73, 87, 43)
names_vec = c('Brian', 'Toby', 'Sherry')
names(height_vec) = names_vec
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat, mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
air_class = c('business', 'economy', 'first', 'economy', 'first')
levels(factor(air_class))
data(mtcars)
subset(mtcars, am == 1)[order(subset(mtcars, am == 1)$hp, decreasing=TRUE), ][1:3,]
list(list(name = 'Bobby', age = 31, tel_length = c(10, 2, 5)), list(name = 'Marry', age = 27, tel_length = c(31, 29)))
test.data = read.table(header = TRUE, text = "")
test.data = read.table(header = TRUE, text = "
+ a b
+ 1 2
+ 3 4
+ ")
height_vec = c(180, 169, 173)
weight_vec = c(73, 87, 43)
names_vec = c('Brian', 'Toby', 'Sherry')
names(height_vec) = names_vec
names(weight_vec) = names_vec
bmi_vec = weight_vec / (height_vec / 100) ^ 2
bmi_vec[bmi_vec < 18.5 | bmi_vec >= 24]
sum(seq(1, 100))
kevin = c(85, 73)
marry = c(72, 64)
jerry = c(59, 66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow=TRUE)
rownames(mat) = c('kevin', 'marry', 'jerry')
colnames(mat) = c('first', 'second')
mat = cbind(mat, mat[, 1] * 0.4 + mat[, 2] * 0.6)
colnames(mat)[ncol(mat)] = 'total'
mat
air_class = c('business', 'economy', 'first', 'economy', 'first')
levels(factor(air_class))
data(mtcars)
subset(mtcars, am == 1)[order(subset(mtcars, am == 1)$hp, decreasing=TRUE), ][1:3,]
list(list(name = 'Bobby', age = 31, tel_length = c(10, 2, 5)), list(name = 'Marry', age = 27, tel_length = c(31, 29)))
test.data = read.table(header = TRUE, text = "
+ a b
+ 1 2
+ 3 4
+ ")
items <-unique (train $ item)
setwd("E:/iNDIEVOX-Recommend/_asset/R")
setwd("E:/iNDIEVOX-Recommend/_asset/R")
setwd("E:/iNDIEVOX-Recommend/_asset/R")
# Quote plyr package
library (plyr)
# Read data set
train <-read.csv (file = "small.csv", header = FALSE)
names (train) <-c ("user", "item", "pref")
# Calculated User Lists
usersUnique <-function () {
users <-unique (train $ user)
users [order (users)]
}
# Calculation Method Product List
itemsUnique <-function () {
items <-unique (train $ item)
items [order (items)]
}
# User Lists
users <-usersUnique ()
# Product List
items <-itemsUnique ()
# Establish Product List Index
index <-function (x) which (items %in% x)
data<-ddply(train,.(user,item,pref),summarize,idx=index(item))
# Co-occurrence matrix
cooccurrence <-function (data) {
n <-length (items)
co <-matrix (rep (0, n * n), nrow = n)
for (u in users) {
idx <-index (data $ item [which(data$user == u)])
m <-merge (idx, idx)
for (i in 1: nrow (m)) {
co [m$x[i], m$y[i]] = co[m$x[i], m$y[i]]+1
}
}
return (co)
}
# Generate co-occurrence matrix
co <-cooccurrence (data)
# Recommendation algorithm
recommend <-function (udata = udata, co = coMatrix, num = 0) {
n <- length(items)
# All of pref
pref <- rep (0, n)
pref[udata$idx] <-udata$pref
# User Rating Matrix
userx <- matrix(pref, nrow = n)
# Scoring matrix co-occurrence matrix *
r <- co %*% userx
# Recommended Sort
r[udata$idx] <-0
idx <-order(r, decreasing = TRUE)
topn <-data.frame (user = rep(udata$user[1], length(idx)), item = items[idx], val = r[idx])
# Recommended results take months before the num
if (num> 0) {
topn <-head (topn, num)
}
# Back to results
return (topn)
}
# initializing dataframe for recommendations storage
recommendation<-data.frame()
# Generating recommendations for all of the users
for(i in 1:length(users)){
udata<-data[which(data$user==users[i]),]
recommendation<-rbind(recommendation,recommend(udata,co,7))
}
View(recommendation)
# Calculated User Lists
setwd("E:/iNDIEVOX-Recommend/_asset/R")
# Quote plyr package
library (plyr)
# Read data set
train <-read.csv (file = "small.csv", header = FALSE)
names (train) <-c ("user", "item", "pref")
# Calculated User Lists
usersUnique <-function () {
users <-unique (train $ user)
users [order (users)]
}
# Calculation Method Product List
itemsUnique <-function () {
items <-unique (train $ item)
items [order (items)]
}
# User Lists
users <-usersUnique ()
# Product List
items <-itemsUnique ()
# Establish Product List Index
index <-function (x) which (items %in% x)
data<-ddply(train,.(user,item,pref),summarize,idx=index(item))
# Co-occurrence matrix
cooccurrence <-function (data) {
n <-length (items)
co <-matrix (rep (0, n * n), nrow = n)
for (u in users) {
idx <-index (data $ item [which(data$user == u)])
m <-merge (idx, idx)
for (i in 1: nrow (m)) {
co [m$x[i], m$y[i]] = co[m$x[i], m$y[i]]+1
}
}
return (co)
}
# Generate co-occurrence matrix
co <-cooccurrence (data)
# Recommendation algorithm
recommend <-function (udata = udata, co = coMatrix, num = 0) {
n <- length(items)
# All of pref
pref <- rep (0, n)
pref[udata$idx] <-udata$pref
# User Rating Matrix
userx <- matrix(pref, nrow = n)
# Scoring matrix co-occurrence matrix *
r <- co %*% userx
# Recommended Sort
r[udata$idx] <-0
idx <-order(r, decreasing = TRUE)
topn <-data.frame (user = rep(udata$user[1], length(idx)), item = items[idx], val = r[idx])
# Recommended results take months before the num
if (num> 0) {
topn <-head (topn, num)
}
# Back to results
return (topn)
}
# initializing dataframe for recommendations storage
recommendation<-data.frame()
# Generating recommendations for all of the users
for(i in 1:length(users)){
udata<-data[which(data$user==users[i]),]
recommendation<-rbind(recommendation,recommend(udata,co,7))
}
